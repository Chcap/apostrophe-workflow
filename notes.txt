Need to transfer sessions when switching locales as a logged in editor, even
if to a completely unrelated domain. Cookies won't cover it.

Simplest way is to add ?session=XXX. This risks session fixation attacks.

Most secure way is to add ?session=YYY, where YYY is an identifier in
the Apostrophe cache which isn't valid for very long.

We could also use ?session=ZZZ where hash(XXX + time) = ZZZ, and test
various time intervals and accept recent ones, etc., but this is complicated
and the performance of the cache is acceptable.

Further enhancement is to do this with a data attribute, hijack the link
with frontend JS and turn it into a header in an AJAX request rather than
a normal link, so there is no chance a naive user will copy and paste
and share it.

Ideally we would say to express-session, "here is a sessionID. Load it up,
set the cookie for it, and then act as though you got it from the cookie in
the first place." Unfortunately there appears to be no API for this.

Second-best is to set the cookie ourselves and redirect so that the
session middleware fires. The problem with that is that we won't be
setting the cookie exactly the way `express-session` would, unless
we duplicate/borrow a lot of code.

FLOW

Link generated by locale switcher now:

/go-get-the-thing?slug=foo&workflowLocale=x

Based on data attributes, instead redirect via window.location.href to:

http://hostname/go-get-the-thing?slug=foo&workflowLocale=x&crossDomainSessionToken=y

The header and POST techniques aren't going to work well here because we need to
get to the right domain right off the bat or all of this will be setting
the wrong session cookie anyway. 

But the use of the data attributes and interception to add the hostname and token
prevents a naive editor from sharing a URL that gives away their session.

